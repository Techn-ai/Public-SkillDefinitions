{
  "name" : "microservice architecture",
  "name_en" : null,
  "id" : "46850d6b-7918-4759-ac28-d8ac9c1cb2b9",
  "description" : " A microservice architecture – a variant of the SOA (service-oriented architecture) structural style – arranges an application as a collection of loosely-coupled services. In a microservice architecture, services are fine-grained and the protocols are lightweight. The goal is that teams can bring their services to life independent of others. Loose coupling reduces all types of dependencies and the complexities around it, as service developers do not need to care about the users of the service, they do not force their changes onto users of the service.[1][clarification needed] Therefore it allows organizations developing software to grow fast and big, as well as use off-the-shelf services more easily. Communication requirements are reduced. These benefits come at a cost to maintaining the decoupling. Interfaces need to be designed carefully and treated as a public API. One technique that is used is having multiple interfaces on the same service, or multiple versions of the same service, so as to not disrupt existing users of the code. ",
  "description_en" : "microservices",
  "coversElement" : {
    "classification" : "Technical"
  },
  "taggedWith" : [ ],
  "matchesArea" : [ {
    "skillAreaClassification" : "Technical"
  } ],
  "skillType" : {
    "skillTypeClassification" : "Transferable_and_Functional"
  },
  "relatesTo" : [ ],
  "isCompositeOf" : [ ],
  "isExtensionOf" : [ ],
  "additionaljsonproperties" : null,
  "skillOwner" : "61d38553-5d09-4cd3-a06a-c7173e6c1947",
  "skillOwnerUsername" : "Thor Henning Hetland",
  "editedBy" : "61d38553-5d09-4cd3-a06a-c7173e6c1947",
  "editedByUsername" : "Thor Henning Hetland",
  "networkReference" : null,
  "currentVersion" : 0,
  "createdAt" : [ 2022, 5, 23, 10, 19, 14, 397000000 ],
  "lastEdited" : [ 2022, 8, 26, 9, 21, 52, 946819000 ],
  "public" : true,
  "isExtensionOfSkill" : [ ],
  "isCompositeOfSkill" : [ ],
  "relatesToSkill" : [ ]
}